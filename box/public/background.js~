/**
 * background.js
 *
 * The background script defines what the Chrome Packaged App should
 * do when the app is launched.
 *
 * Initial code based on tutorial here:
 *  https://developer.chrome.com/apps/app_bluetooth
 */


var uuid = '1105';
var device_names = {};
var updateDeviceName = function(device) {
    console.log(device);
    device_names[device.address] = device.name;
    console.log(device_names);


    chrome.bluetoothSocket.create(function(createInfo) {
	chrome.bluetoothSocket.connect(createInfo.socketId,
				       "70:05:14:59:cc:e7", uuid, onConnectedCallback);
    });

};

var removeDeviceName = function(device) {
    delete device_names[device.address];
};


var onConnectedCallback = function() {
    console.log("Hello");

    if (chrome.runtime.lastError) {
	console.log("Connection failed: " + chrome.runtime.lastError);
    } else {
	console.log("Connection successful");
    }
};

/**
 * onLaunched()
 *
 * This event is fired when the user starts the app.  It immediately
 * opens a window for the app of the specified width and height.
 *
 */
chrome.app.runtime.onLaunched.addListener(function() {

    // Create the window
    chrome.app.window.create('window.html', {
	'bounds' : {
	    'width' : 400,
	    'height' : 500
	}
    });
    
    // Manage bluetooth devices by adding listeners to receive newly
    // found devices and updates to the previously known devices.
    chrome.bluetooth.onDeviceAdded.addListener(updateDeviceName);
    chrome.bluetooth.onDeviceChanged.addListener(updateDeviceName);
    chrome.bluetooth.onDeviceRemoved.addListener(removeDeviceName);
    
    // Connect to a very specific device and update its name
    // in our little array.
    chrome.bluetooth.getDevice("70:05:14:59:cc:e7", function(device)
			       { 
				   updateDeviceName(device) 
			       });
    

});

